# Generated by Django 2.1.2 on 2018-10-25 21:19

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import mainapp.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Announcements',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dateadded', models.DateTimeField(auto_now_add=True)),
                ('priority', models.CharField(choices=[('H', 'High'), ('M', 'Medium'), ('L', 'Low')], default='L', max_length=20, verbose_name='Priority')),
                ('description', models.TextField(blank=True)),
                ('image', models.ImageField(blank=True, upload_to=mainapp.models.upload_to)),
                ('upload', models.FileField(blank=True, upload_to=mainapp.models.upload_to)),
                ('is_pinned', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'Announcement: News',
                'verbose_name_plural': 'Announcements: News',
            },
        ),
        migrations.CreateModel(
            name='Contributor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('district', models.CharField(max_length=15, verbose_name='District')),
                ('name', models.CharField(max_length=100, verbose_name='Name')),
                ('phone', models.CharField(max_length=14, validators=[django.core.validators.RegexValidator(code='invalid_mobile', message='Please Enter 10 digit mobile number or landline as 0<std code><phone number>', regex='^((\\+91|91|0)[\\- ]{0,1})?[456789]\\d{9}$')], verbose_name='Phone\u200d')),
                ('address', models.TextField(verbose_name='Address')),
                ('contrib_details', models.TextField(default='', verbose_name='Details of contribution Eg: 10 shirts')),
                ('status', models.CharField(choices=[('new', 'New'), ('ful', 'Fullfilled')], default='new', max_length=10)),
                ('contribution_type', models.CharField(choices=[('fod', 'Food'), ('med', 'Medicines'), ('shl', 'Shelter'), ('clt', 'Clothing'), ('sny', 'Sanitary materials'), ('oth', 'Others')], default='oth', max_length=3)),
            ],
            options={
                'verbose_name': 'Contributor: Donation',
                'verbose_name_plural': 'Contributors: Donations',
            },
        ),
        migrations.CreateModel(
            name='CsvBulkUpload',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
                ('csv_file', models.FileField(upload_to=mainapp.models.upload_to)),
                ('is_completed', models.BooleanField(default=False, verbose_name='Import Status')),
                ('failure_reason', models.CharField(blank=True, default='', max_length=150, verbose_name='Reason of failure, if failed')),
            ],
        ),
        migrations.CreateModel(
            name='DataCollection',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('document_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Document name')),
                ('document', models.FileField(blank=True, upload_to='camp_data')),
                ('tag', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'verbose_name': 'Data: Collection',
                'verbose_name_plural': 'Data: Collections',
            },
        ),
        migrations.CreateModel(
            name='DistrictCollection',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('district', models.CharField(max_length=15)),
                ('collection', models.TextField(verbose_name='Details of collected items')),
            ],
            options={
                'verbose_name': 'District: Collection',
                'verbose_name_plural': 'District: Collections',
            },
        ),
        migrations.CreateModel(
            name='DistrictManager',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('district', models.CharField(max_length=15, verbose_name='District')),
                ('name', models.CharField(max_length=100, verbose_name='Name')),
                ('phone', models.CharField(max_length=11, verbose_name='Phone\u200d')),
                ('email', models.CharField(max_length=100, verbose_name='Email')),
            ],
            options={
                'verbose_name': 'District: Manager',
                'verbose_name_plural': 'District: Managers',
            },
        ),
        migrations.CreateModel(
            name='DistrictNeed',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('district', models.CharField(max_length=15)),
                ('needs', models.TextField(verbose_name='Items required')),
                ('cnandpts', models.TextField(verbose_name='Contacts and collection points')),
            ],
            options={
                'verbose_name': 'District: Need',
                'verbose_name_plural': 'District: Needs',
            },
        ),
        migrations.CreateModel(
            name='NGO',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('district', models.CharField(max_length=15)),
                ('organisation', models.CharField(max_length=250, verbose_name='Name of Organization')),
                ('organisation_type', models.CharField(max_length=250, verbose_name='Type of Organization')),
                ('organisation_address', models.TextField(default='', verbose_name='Address of Organization')),
                ('name', models.CharField(max_length=100, verbose_name='Contact Person')),
                ('phone', models.CharField(blank=True, max_length=17, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')])),
                ('description', models.TextField(verbose_name='About Organisation')),
                ('area', models.TextField(verbose_name='Area of volunteering')),
                ('location', models.CharField(max_length=500, verbose_name='Preferred Location to Volunteer')),
                ('website_url', models.CharField(default='', max_length=300, verbose_name='Enter your website link')),
                ('is_spoc', models.BooleanField(default=False, verbose_name='Is point of contact')),
                ('joined', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Volunteer: NGO',
                'verbose_name_plural': 'Volunteers: NGOs',
            },
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=51, verbose_name='Name')),
                ('phone', models.CharField(blank=True, max_length=14, null=True, verbose_name='Mobile')),
                ('age', models.IntegerField(blank=True, null=True, verbose_name='Age')),
                ('gender', models.IntegerField(blank=True, choices=[(0, 'Male'), (1, 'Female'), (2, 'Others')], null=True, verbose_name='Gender')),
                ('address', models.TextField(blank=True, max_length=150, null=True, verbose_name='Address')),
                ('district', models.CharField(blank=True, max_length=15, null=True, verbose_name='Residence District')),
                ('notes', models.TextField(blank=True, max_length=500, null=True, verbose_name='Notes')),
                ('added_at', models.DateTimeField(auto_now_add=True)),
                ('checkin_date', models.DateField(blank=True, null=True, verbose_name='Check-in Date')),
                ('checkout_date', models.DateField(blank=True, null=True, verbose_name='Check-out Date')),
                ('status', models.CharField(blank=True, choices=[('new', 'New'), ('checked_out', 'Checked Out'), ('closed', 'Closed')], default=None, max_length=15, null=True)),
                ('unique_identifier', models.CharField(blank=True, default='', max_length=32)),
                ('is_dup', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'Relief: Inmate',
                'verbose_name_plural': 'Relief: Inmates',
            },
        ),
        migrations.CreateModel(
            name='PrivateRescueCamp',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Camp Name')),
                ('location', models.TextField(blank=True, null=True, verbose_name='Address')),
                ('district', models.CharField(max_length=15)),
                ('lsg_name', models.CharField(blank=True, max_length=150, null=True, verbose_name='LSG Name')),
                ('ward_name', models.CharField(blank=True, max_length=150, null=True, verbose_name='Ward')),
                ('contacts', models.TextField(blank=True, null=True, verbose_name='Phone Numbers')),
                ('facilities_available', models.TextField(blank=True, null=True, verbose_name='Facilities Available (light, kitchen, toilets etc.)')),
                ('map_link', models.CharField(blank=True, help_text='Copy and paste the full Google Maps link', max_length=250, null=True, verbose_name='Map link')),
                ('latlng', models.CharField(blank=True, help_text="Comma separated latlng field. Leave blank if you don't know it", max_length=100, verbose_name='GPS Coordinates')),
                ('total_people', models.IntegerField(blank=True, null=True, verbose_name='Total Number of People')),
                ('total_males', models.IntegerField(blank=True, null=True, verbose_name='Number of Males')),
                ('total_females', models.IntegerField(blank=True, null=True, verbose_name='Number of Females')),
                ('total_infants', models.IntegerField(blank=True, null=True, verbose_name='Number of Infants (<2y)')),
                ('food_req', models.TextField(blank=True, null=True, verbose_name='Food')),
                ('clothing_req', models.TextField(blank=True, null=True, verbose_name='Clothing')),
                ('sanitary_req', models.TextField(blank=True, null=True, verbose_name='Sanitary')),
                ('medical_req', models.TextField(blank=True, null=True, verbose_name='Medical')),
                ('other_req', models.TextField(blank=True, null=True, verbose_name='Other')),
                ('status', models.CharField(choices=[('active', 'Active'), ('closed', 'Closed'), ('duplicate', 'Duplicate')], default='active', max_length=10)),
            ],
            options={
                'verbose_name': 'Private Relief: Camp',
                'verbose_name_plural': 'Private Relief: Camps',
            },
        ),
        migrations.CreateModel(
            name='Request',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('district', models.CharField(max_length=15, verbose_name='District')),
                ('location', models.CharField(max_length=500, verbose_name='Location')),
                ('requestee', models.CharField(max_length=100, verbose_name='Requestee')),
                ('requestee_phone', models.CharField(max_length=14, validators=[django.core.validators.RegexValidator(code='invalid_mobile', message='Please Enter 10/11 digit mobile number or landline as 0<std code><phone number>', regex='^((\\+91|91|0)[\\- ]{0,1})?[456789]\\d{9}$')], verbose_name='Requestee Phone\u200d')),
                ('latlng', models.CharField(blank=True, max_length=100, verbose_name='GPS Coordinates')),
                ('latlng_accuracy', models.CharField(blank=True, max_length=100, verbose_name='GPS Accuracy')),
                ('is_request_for_others', models.BooleanField(default=False, verbose_name='Requesting for others')),
                ('needwater', models.BooleanField(verbose_name='Water')),
                ('needfood', models.BooleanField(verbose_name='Food')),
                ('needcloth', models.BooleanField(verbose_name='Clothing')),
                ('needmed', models.BooleanField(verbose_name='Medicine\u200d')),
                ('needtoilet', models.BooleanField(verbose_name='Toiletries')),
                ('needkit_util', models.BooleanField(verbose_name='Kitchen utensil\u200d')),
                ('needrescue', models.BooleanField(verbose_name='Need rescue')),
                ('detailwater', models.CharField(blank=True, max_length=250, verbose_name='Details for required water\u200d')),
                ('detailfood', models.CharField(blank=True, max_length=250, verbose_name='Details for required food\u200d')),
                ('detailcloth', models.CharField(blank=True, max_length=250, verbose_name='Details for required clothing\u200d')),
                ('detailmed', models.CharField(blank=True, max_length=250, verbose_name='Details for required medicine\u200d')),
                ('detailtoilet', models.CharField(blank=True, max_length=250, verbose_name='Details for required toiletries\u200d')),
                ('detailkit_util', models.CharField(blank=True, max_length=250, verbose_name='Details for required kitchen utensil\u200d')),
                ('detailrescue', models.CharField(blank=True, max_length=250, verbose_name='Details for rescue action')),
                ('needothers', models.CharField(blank=True, max_length=500, verbose_name='Other needs')),
                ('status', models.CharField(choices=[('new', 'New'), ('pro', 'In progess'), ('sup', 'Supplied')], default='new', max_length=10)),
                ('supply_details', models.CharField(blank=True, max_length=100)),
                ('dateadded', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Rescue: Request',
                'verbose_name_plural': 'Rescue:Requests',
            },
        ),
        migrations.CreateModel(
            name='RequestUpdate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('hig', 'High priority'), ('med', 'Medium priority'), ('low', 'Low priority'), ('cls', 'Can be closed'), ('otr', 'Other')], max_length=10)),
                ('other_status', models.CharField(blank=True, default='', max_length=255, verbose_name='Please specify other status')),
                ('updater_name', models.CharField(max_length=100, verbose_name='Name of person or group updating')),
                ('updater_phone', models.CharField(max_length=14, validators=[django.core.validators.RegexValidator(code='invalid_mobile', message='Please Enter 10/11 digit mobile number or landline as 0<std code><phone number>', regex='^((\\+91|91|0)[\\- ]{0,1})?[456789]\\d{9}$')], verbose_name='Phone number of person or group updating')),
                ('notes', models.TextField(blank=True, verbose_name='Volunteer comments')),
                ('update_ts', models.DateTimeField(auto_now_add=True)),
                ('request', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mainapp.Request')),
            ],
        ),
        migrations.CreateModel(
            name='RescueCamp',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Camp Name')),
                ('location', models.TextField(blank=True, null=True, verbose_name='Address')),
                ('district', models.CharField(max_length=15)),
                ('taluk', models.CharField(max_length=50, verbose_name='Taluk')),
                ('village', models.CharField(max_length=50, verbose_name='Village')),
                ('contacts', models.TextField(blank=True, null=True, verbose_name='Phone Numbers')),
                ('facilities_available', models.TextField(blank=True, null=True, verbose_name='Facilities Available (light, kitchen, toilets etc.)')),
                ('map_link', models.CharField(blank=True, help_text='Copy and paste the full Google Maps link', max_length=250, null=True, verbose_name='Map link')),
                ('latlng', models.CharField(blank=True, help_text="Comma separated latlng field. Leave blank if you don't know it", max_length=100, verbose_name='GPS Coordinates')),
                ('total_people', models.IntegerField(blank=True, null=True, verbose_name='Total Number of People')),
                ('total_males', models.IntegerField(blank=True, null=True, verbose_name='Number of Males')),
                ('total_females', models.IntegerField(blank=True, null=True, verbose_name='Number of Females')),
                ('total_infants', models.IntegerField(blank=True, null=True, verbose_name='Number of Infants (<2y)')),
                ('food_req', models.TextField(blank=True, null=True, verbose_name='Food')),
                ('clothing_req', models.TextField(blank=True, null=True, verbose_name='Clothing')),
                ('sanitary_req', models.TextField(blank=True, null=True, verbose_name='Sanitary')),
                ('medical_req', models.TextField(blank=True, null=True, verbose_name='Medical')),
                ('other_req', models.TextField(blank=True, null=True, verbose_name='Other')),
                ('status', models.CharField(choices=[('active', 'Active'), ('closed', 'Closed'), ('duplicate', 'Duplicate')], default='active', max_length=10)),
                ('data_entry_user', models.ForeignKey(blank=True, help_text="This camp's coordinator page will be visible only to this user", null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Relief: Camp',
                'verbose_name_plural': 'Relief: Camps',
            },
        ),
        migrations.CreateModel(
            name='Volunteer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('district', models.CharField(max_length=15, verbose_name='District')),
                ('name', models.CharField(max_length=100, verbose_name='Name')),
                ('phone', models.CharField(max_length=14, validators=[django.core.validators.RegexValidator(code='invalid_mobile', message='Please Enter 10 digit mobile number or landline as 0<std code><phone number>', regex='^((\\+91|91|0)[\\- ]{0,1})?[456789]\\d{9}$')], verbose_name='Phone\u200d')),
                ('organisation', models.CharField(max_length=250, verbose_name='Organization/ Institution')),
                ('address', models.TextField(verbose_name='Address')),
                ('area', models.CharField(choices=[('dcr', 'Doctor'), ('hsv', 'Health Services'), ('elw', 'Electrical Works'), ('mew', 'Mechanical Work'), ('cvw', 'Civil Work'), ('plw', 'Plumbing work'), ('vls', 'Vehicle Support'), ('ckg', 'Cooking'), ('rlo', 'Relief operation'), ('cln', 'Cleaning'), ('bot', 'Boat Service'), ('rck', 'Rock Climbing'), ('oth', 'Other')], max_length=15, verbose_name='Area of volunteering')),
                ('is_spoc', models.BooleanField(default=False, verbose_name='Is point of contact')),
                ('joined', models.DateTimeField(auto_now_add=True)),
                ('is_active', models.BooleanField(default=True)),
                ('has_consented', models.BooleanField(default=False, verbose_name='Available')),
            ],
            options={
                'verbose_name': 'Volunteer: Individual',
                'verbose_name_plural': 'Volunteers: Individuals',
            },
        ),
        migrations.AddField(
            model_name='person',
            name='camped_at',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mainapp.RescueCamp', verbose_name='Camp Name'),
        ),
        migrations.AddField(
            model_name='csvbulkupload',
            name='camp',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mainapp.RescueCamp'),
        ),
        migrations.AddIndex(
            model_name='person',
            index=models.Index(fields=['name', '-added_at'], name='mainapp_per_name_65f623_idx'),
        ),
    ]
